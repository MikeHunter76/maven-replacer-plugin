<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>bakersoftware</groupId>
	<artifactId>test-plugin-use</artifactId>
	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>test-plugin-use</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>
				<version>1.5.4-SNAPSHOT</version>
				<configuration>
					<quiet>false</quiet>
				</configuration>
				<executions>
					<execution>
						<id>non-regex</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/regex.txt</file>
							<token>$token$</token>
							<value>-value-</value>
							<regex>false</regex>
							<quiet>false</quiet>
						</configuration>
					</execution>
					<execution>
						<phase>process-resources</phase>
						<id>line match</id>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/linematch.txt</file>
							<tokenValueMap>linematch-token-map.txt</tokenValueMap>
							<regexFlags>
								<regex>MULTILINE</regex>
							</regexFlags>
						</configuration>
					</execution>
					<execution>
						<phase>process-resources</phase>
						<id>ignoring errors with missing tokenValueMap</id>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<tokenValueMap>does.not.exist</tokenValueMap>
							<ignoreErrors>true</ignoreErrors>
						</configuration>
					</execution>
					<execution>
						<id>multiline</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/multiline.txt</file>
							<token>(?m)&lt;!--removedByBuildStart(.|\s)*?removedByBuildEnd--&gt;</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>outside-outdir</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>simple.txt</file>
							<token>token</token>
							<value>value</value>
							<outputFile>/tmp/simple.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>using-project-output-prop</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/classes/simple.txt</file>
							<token>token</token>
							<value>value</value>
							<outputFile>${project.build.directory}/classes/simple-absolute.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>timestamped</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>timestamped.toReplace</file>
							<token>project.version</token>
							<value>${project.version}-${maven.build.timestamp}</value>
						</configuration>
					</execution>
					<execution>
						<id>outdir</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>simple.txt</file>
							<token>token</token>
							<value>value</value>
							<outputDir>outdir</outputDir>
						</configuration>
					</execution>
					<execution>
						<id>delimiters</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>delimiters.txt</file>
							<regex>false</regex>
							<token>token</token>
							<value>value</value>
							<delimiters>
								<delimiter>@</delimiter>
								<delimiter>#{*}</delimiter>
								<delimiter>$${*}</delimiter>
							</delimiters>
						</configuration>
					</execution>
					<execution>
						<id>unescaped</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>unescape.txt</file>
							<unescape>true</unescape>
							<token>token\r\n123\t456</token>
							<value>value\r\n789\t098</value>
						</configuration>
					</execution>
					<execution>
						<id>outdir-with-outputBasedir</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>simple.txt</file>
							<token>token</token>
							<value>value</value>
							<outputDir>outdir</outputDir>
							<outputBasedir>target/outputBasedir</outputBasedir>
						</configuration>
					</execution>
					<execution>
						<id>outputfile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>simple.txt</file>
							<token>token</token>
							<value>value</value>
							<outputFile>simple-outputfile.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>outputfile-newdir</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<token>token</token>
							<value>value</value>
							<outputFile>target/classes/newdir/simple-outputfile.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>largefile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/largefile.txt</file>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>outputfile-remove</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<token>token</token>
							<outputFile>target/simple-outputfile-remove.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>outputfile-tokenfile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>simple.txt</file>
							<tokenFile>tokenfile.txt</tokenFile>
							<value>value</value>
							<outputFile>simple-outputfile-tokenfile.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>outputfile-valuefile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<token>token</token>
							<valueFile>valuefile.txt</valueFile>
							<outputFile>target/classes/simple-outputfile-valuefile.txt</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>regex-flags</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<outputFile>target/classes/regex-flags-outputfile.txt</outputFile>
							<token>TOKEN</token>
							<value>value</value>
							<regexFlags>
								<regexFlag>CASE_INSENSITIVE</regexFlag>
								<regexFlag>MULTILINE</regexFlag>
							</regexFlags>
						</configuration>
					</execution>
					<execution>
						<id>simple</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>ignoreMissingFile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/missing.txt</file>
							<token>token</token>
							<value>value</value>
							<ignoreMissingFile>true</ignoreMissingFile>
						</configuration>
					</execution>
					<execution>
						<id>outputfile-tokenValueMap</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/special/multiple-tokens-for-map.txt</file>
							<tokenValueMap>tokenValueMap.txt</tokenValueMap>
							<outputFile>target/multiple-tokens-for-map-outputfile.txt</outputFile>
							<regexFlags>
								<regexFlag>MULTILINE</regexFlag>
							</regexFlags>
						</configuration>
					</execution>
					<execution>
						<id>tokenValueMap</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/special/multiple-tokens-for-map.txt</file>
							<tokenValueMap>tokenValueMap.txt</tokenValueMap>
						</configuration>
					</execution>
					<execution>
						<id>variableTokenValueMap</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<file>special/variableTokenValueMap.txt</file>
							<variableTokenValueMap>token1=value1,token2=value2</variableTokenValueMap>
						</configuration>
					</execution>
					<execution>
						<id>multiple-files</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/..</basedir>
							<includes>
								<include>target/classes/nesteddir/multiple-files*.txt</include>
							</includes>
							<excludes>
								<exclude>excluded*.*</exclude>
							</excludes>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>multiple-files-with-abs-path</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<includes>
								<include>${project.build.directory}/**/nesteddir-for-abs/multiple-files*.txt</include>
							</includes>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>multiple-files-to-outdir</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<includes>
								<include>nesteddir/multiple-files*.txt</include>
							</includes>
							<excludes>
								<exclude>excluded*.*</exclude>
							</excludes>
							<outputDir>target/outputDir</outputDir>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>multiple-files-comma-separated</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<basedir>target/classes</basedir>
							<filesToInclude>file1, file2, include*</filesToInclude>
							<filesToExclude>excludefile1, excludefile2,
								target/classes/include1</filesToExclude>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>multiple-sub-replacement</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/special/multiple-tokens-to-replace.txt</file>
							<replacements>
								<replacement>
									<token>token1</token>
									<value>value1</value>
								</replacement>
								<replacement>
									<token>token2</token>
									<value>value2</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>non-ascii-char-file</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/non-ascii-char-file</file>
							<token>tôkên</token>
							<value>vÄluê</value>
						</configuration>
					</execution>
					<execution>
						<id>xpath</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/xpath.xml</file>
							<outputFile>target/xpath-out.xml</outputFile>
							<xpath>//person[firstname='token' and lastname='change me']</xpath>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
					<execution>
						<id>xpath-in-replacements</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/xpath.xml</file>
							<outputFile>target/xpath-in-replacements-out.xml</outputFile>
							<replacements>
								<replacement>
									<xpath>//person[firstname='token' and lastname='change me']</xpath>
									<token>token</token>
									<value>value</value>
								</replacement>
							</replacements>
						</configuration>
					</execution>
					<execution>
						<id>dynamic-outputfiles-from-patterns</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
						<configuration>
							<file>target/classes/simple.txt</file>
							<inputFilePattern>simple.(.+)</inputFilePattern>
							<outputFilePattern>simple.$1.output</outputFilePattern>
							<token>token</token>
							<value>value</value>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>generateTestStubs</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.gmaven.runtime</groupId>
			<artifactId>gmaven-runtime</artifactId>
			<version>1.3</version>
			<type>pom</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>1.7.6</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
